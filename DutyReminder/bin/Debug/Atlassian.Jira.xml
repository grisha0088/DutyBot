<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Atlassian.Jira</name>
    </assembly>
    <members>
        <member name="T:Atlassian.Jira.Attachment">
            <summary>
            An attachment associated with an issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Attachment.#ctor(Atlassian.Jira.Jira,Atlassian.Jira.IWebClient,Atlassian.Jira.Remote.RemoteAttachment)">
            <summary>
            Creates a new instance of an Attachment from a remote entity.
            </summary>
            <param name="jira">Object used to interact with JIRA.</param>
            <param name="webClient">WebClient to use to download attachment.</param>
            <param name="remoteAttachment">Remote attachment entity.</param>
        </member>
        <member name="M:Atlassian.Jira.Attachment.DownloadAsync(System.String)">
            <summary>
            Downloads attachment to specified file.
            </summary>
            <param name="fullFileName">Full file name where attachment will be downloaded.</param>
        </member>
        <member name="M:Atlassian.Jira.Attachment.Download(System.String)">
            <summary>
            Downloads attachment to specified file
            </summary>
            <param name="fullFileName">Full file name where attachment will be downloaded</param>
        </member>
        <member name="P:Atlassian.Jira.Attachment.Id">
            <summary>
            Id of attachment
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Attachment.Author">
            <summary>
            Author of attachment (user that uploaded the file)
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Attachment.CreatedDate">
            <summary>
            Date of creation
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Attachment.FileName">
            <summary>
            File name of the attachment
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Attachment.MimeType">
            <summary>
            Mime type
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Attachment.FileSize">
            <summary>
            File size
            </summary>
        </member>
        <member name="T:Atlassian.Jira.UploadAttachmentInfo">
            <summary>
            Information about an attachment to be uploaded
            </summary>
        </member>
        <member name="T:Atlassian.Jira.CascadingSelectCustomField">
            <summary>
            Represents the values of a cascading select list custom field.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.CascadingSelectCustomField.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of a CascadingSelectCustomField.
            </summary>
            <param name="name">The name of the custom field.</param>
            <param name="parentOption">The value of the parent option.</param>
            <param name="childOption">The value of the child option.</param>
        </member>
        <member name="P:Atlassian.Jira.CascadingSelectCustomField.Name">
            <summary>
            The name of this custom field.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.CascadingSelectCustomField.ParentOption">
            <summary>
            The value of the parent option.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.CascadingSelectCustomField.ChildOption">
            <summary>
            The value of the child option.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Comment">
            <summary>
            A comment associated with an issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Comment.#ctor">
            <summary>
            Create a new Comment.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Comment.#ctor(Atlassian.Jira.Remote.RemoteComment)">
            <summary>
            Create a new Comment from a remote intance object.
            </summary>
            <param name="remoteComment">The remote comment.</param>
        </member>
        <member name="T:Atlassian.Jira.ComparableString">
            <summary>
            Type that wraps a string and exposes opertor overloads for
            easier LINQ queries
            </summary>
            <remarks>
            Allows comparisons in the form of issue.Key > "TST-1"
            </remarks>
        </member>
        <member name="T:Atlassian.Jira.JiraNamedEntity">
            <summary>
            Represents a named entity within JIRA. Abstracts the Version and Component used on issues
            </summary>
            <remarks>http://docs.atlassian.com/rpc-jira-plugin/latest/com/atlassian/jira/rpc/soap/beans/AbstractNamedRemoteEntity.html</remarks>
        </member>
        <member name="T:Atlassian.Jira.IJiraEntity">
            <summary>
            Representes an Jira entity with a unique identifier.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IJiraEntity.Id">
            <summary>
            Unique identifier for this entity.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraNamedEntity.#ctor(Atlassian.Jira.Remote.AbstractNamedRemoteEntity)">
            <summary>
            Creates an instance of a JiraNamedEntity base on a remote entity.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraNamedEntity.Id">
            <summary>
            Id of the entity
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraNamedEntity.Name">
            <summary>
            Name of the entity
            </summary>
        </member>
        <member name="T:Atlassian.Jira.ICustomFieldValueSerializer">
            <summary>
            Contract to serialize and deserialize a custom field value from JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.ICustomFieldValueSerializer.FromJson(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Deserializes values from a custom field.
            </summary>
            <param name="json">JToken representing the json value(s).</param>
        </member>
        <member name="M:Atlassian.Jira.ICustomFieldValueSerializer.ToJson(System.String[])">
            <summary>
            Serializes values for a custom field.
            </summary>
            <param name="values">Values to serialize as JSON.</param>
        </member>
        <member name="T:Atlassian.Jira.IPagedQueryResult`1">
            <summary>
            Represents a query result for a resource that supports pagination.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IPagedQueryResult`1.ItemsPerPage">
            <summary>
            The maximum number of items included on each page.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IPagedQueryResult`1.StartAt">
            <summary>
            The index of the first item in the paged result.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IPagedQueryResult`1.TotalItems">
            <summary>
            The total number of items.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.IssueLink">
            <summary>
            Represents a link between two issues.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueLink.#ctor(Atlassian.Jira.IssueLinkType,Atlassian.Jira.Issue,Atlassian.Jira.Issue)">
            <summary>
            Creates a new IssueLink instance.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IssueLink.InwardIssue">
            <summary>
            The inward issue of the link relationship.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IssueLink.LinkType">
            <summary>
            The type of the link relationship.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IssueLink.OutwardIssue">
            <summary>
            The outward issue of the link relationship.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.IssueLinkType">
            <summary>
            Represents an issue link type in JIRA.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.JiraNamedResource">
            <summary>
            Class used to deserialize a generic JIRA resource as returned by the REST API.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraNamedResource.Id">
            <summary>
            Identifier of this resource.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraNamedResource.Name">
            <summary>
            Name of this resource.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraNamedResource.Self">
            <summary>
            Url to access this resource.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IssueLinkType.Inward">
            <summary>
            Description of the 'inward' issue link relationship.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.IssueLinkType.Outward">
            <summary>
            Description of the 'outward' issue link relationship.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.JiraCache">
            <summary>
            Cache for frequently retrieved server items from JIRA.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.PagedQueryResult`1">
            <summary>
            PagedQueryResult that can be deserialized from default JIRA paging response.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Remote.IJiraRestClient">
            <summary>
            Contract for a client that iteracts with JIRA via rest.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequest(RestSharp.IRestRequest)">
            <summary>
            Executes a request.
            </summary>
            <param name="request">Request object.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequest(RestSharp.Method,System.String,System.Object)">
            <summary>
            Executes a request and returns the response as JSON.
            </summary>
            <param name="method">Request method.</param>
            <param name="resource">Request resource url.</param>
            <param name="requestBody">Request body to be serialized.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequestAsync(RestSharp.Method,System.String,System.Object)">
            <summary>
            Executes an async request and returns the response as JSON.
            </summary>
            <param name="method">Request method.</param>
            <param name="resource">Request resource url.</param>
            <param name="requestBody">Request body to be serialized.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequestAsync(RestSharp.Method,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Executes an async request and returns the response as JSON.
            </summary>
            <param name="method">Request method.</param>
            <param name="resource">Request resource url.</param>
            <param name="requestBody">Request body to be serialized.</param>
            <param name="token">Cancellation token for the operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequest``1(RestSharp.Method,System.String,System.Object)">
            <summary>
            Executes a request and serializes the response to an object.
            </summary>
            <typeparam name="T">Type to serialize the reponse.</typeparam>
            <param name="method">Request method.</param>
            <param name="resource">Request resource url.</param>
            <param name="requestBody">Request body to be serialized.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequestAsync``1(RestSharp.Method,System.String,System.Object)">
            <summary>
            Executes an async request and serializes the response to an object.
            </summary>
            <typeparam name="T">Type to serialize the reponse.</typeparam>
            <param name="method">Request method.</param>
            <param name="resource">Request resource url.</param>
            <param name="requestBody">Request body to be serialized.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteRequestAsync``1(RestSharp.Method,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Executes an async request and serializes the response to an object.
            </summary>
            <typeparam name="T">Type to serialize the reponse.</typeparam>
            <param name="method">Request method.</param>
            <param name="resource">Request resource url.</param>
            <param name="requestBody">Request body to be serialized.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an issue by its key.
            </summary>
            <param name="issueKey">The issue key to retrieve</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.UpdateIssueAsync(Atlassian.Jira.Issue,System.Threading.CancellationToken)">
            <summary>
            Updates an issue and returns a new instance populated from server.
            </summary>
            <param name="issue">Issue to update.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.CreateIssueAsyc(Atlassian.Jira.Issue,System.Threading.CancellationToken)">
            <summary>
            Creates an issue and returns a new instance populated from server.
            </summary>
            <param name="issue">Issue to create.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.ExecuteIssueWorkflowActionAsync(Atlassian.Jira.Issue,System.String,Atlassian.Jira.WorkflowTransitionUpdates,System.Threading.CancellationToken)">
            <summary>
            Transition an issue through a workflow action.
            </summary>
            <param name="issue">Issue to transition.</param>
            <param name="actionId">The workflow action to transition to.</param>
            <param name="updates">Additional updates to perform when transitioning the issue.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssuesFromJqlAsync(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Execute a specific JQL query and return the resulting issues
            </summary>
            <param name="jql">JQL search query</param>
            <param name="maxIssues">Maximum number of issues to return (defaults to 50). The maximum allowable value is dictated by the JIRA property 'jira.search.views.default.max'. If you specify a value that is higher than this number, your search results will be truncated.</param>
            <param name="startAt">Index of the first issue to return (0-based)</param>
            <returns>Collection of Issues that match the search query</returns>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssuesFromJqlAsync(System.String,System.Nullable{System.Int32},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Execute a specific JQL query and return the resulting issues.
            </summary>
            <param name="jql">JQL search query</param>
            <param name="maxIssues">Maximum number of issues to return (defaults to 50). The maximum allowable value is dictated by the JIRA property 'jira.search.views.default.max'. If you specify a value that is higher than this number, your search results will be truncated.</param>
            <param name="startAt">Index of the first issue to return (0-based)</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetTimeTrackingData(System.String)">
            <summary>
            Gets time tracking information for an issue.
            </summary>
            <param name="issueKey">The issue key.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetCustomFieldsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all custom fields within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetFavouriteFiltersAsync(System.Threading.CancellationToken)">
            <summary>
            Returns the favourite filters for the user.
            </summary>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssuePrioritiesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue priorities within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssueResolutionsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue resolutions within JIRA
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssueStatusesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue statuses within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssueTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue types within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssueLinkTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all available issue link types.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.LinkIssuesAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates an issue link between two issues.
            </summary>
            <param name="outwardIssueKey">Key of the outward issue.</param>
            <param name="inwardIssueKey">Key of the inward issue.</param>
            <param name="linkName">Name of the issue link.</param>
            <param name="comment">Comment to add to the outward issue.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetIssueLinksAsync(Atlassian.Jira.Issue,System.Threading.CancellationToken)">
            <summary>
            Returns all issue links associated with a given issue.
            </summary>
            <param name="issue">The issue to retrieve links for.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.AddCommentToIssueAsync(System.String,Atlassian.Jira.Comment,System.Threading.CancellationToken)">
            <summary>
            Adds a comment to an issue.
            </summary>
            <param name="issueKey">Issue key to add the comment to.</param>
            <param name="comment">Comment object to add.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetCommentsFromIssueAsync(System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns the comments of an issue.
            </summary>
            <param name="issueKey">Issue key to retrieve comments from.</param>
            <param name="maxComments">Maximum number of comments to retrieve.</param>
            <param name="startAt">Index of the first comment to return (0-based).</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetActionsForIssueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the workflow actions that an issue can be transitioned to.
            </summary>
            <param name="issueKey">The issue key</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetProjectsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all projects defined in JIRA.
            </summary>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Remote.IJiraRestClient.GetAttachmentsFromIssueAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieve attachment metadata from server for this issue
            </summary>
            <param name="issueKye">The issue key to get attachments from.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="T:Atlassian.Jira.Remote.IJiraSoapClient">
            <summary>
            Contract for a client that interacts with JIRA via SOAP.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.IssueStatus">
            <summary>
            The status of the issue as defined in JIRA
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueStatus.#ctor(Atlassian.Jira.Remote.AbstractNamedRemoteEntity)">
            <summary>
            Creates an instance of the IssueStatus based on a remote entity.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueStatus.op_Implicit(System.String)~Atlassian.Jira.IssueStatus">
            <summary>
            Allows assignation by name
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueStatus.op_Equality(Atlassian.Jira.IssueStatus,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority == "High"
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.IssueStatus.op_Inequality(Atlassian.Jira.IssueStatus,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority != "High"
            </remarks>
        </member>
        <member name="T:Atlassian.Jira.IssueResolution">
            <summary>
            The resolution of the issue as defined in JIRA
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueResolution.#ctor(Atlassian.Jira.Remote.AbstractNamedRemoteEntity)">
            <summary>
            Creates an instance of the IssueResolution based on a remote entity.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueResolution.op_Implicit(System.String)~Atlassian.Jira.IssueResolution">
            <summary>
            Allows assignation by name
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueResolution.op_Equality(Atlassian.Jira.IssueResolution,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority == "High"
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.IssueResolution.op_Inequality(Atlassian.Jira.IssueResolution,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority != "High"
            </remarks>
        </member>
        <member name="T:Atlassian.Jira.IssuePriority">
            <summary>
            The priority of the issue as defined in JIRA
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssuePriority.#ctor(Atlassian.Jira.Remote.AbstractNamedRemoteEntity)">
            <summary>
            Creates an instance of the IssuePriority based on a remote entity.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssuePriority.op_Implicit(System.String)~Atlassian.Jira.IssuePriority">
            <summary>
            Allows assignation by name
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssuePriority.op_Equality(Atlassian.Jira.IssuePriority,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority == "High"
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.IssuePriority.op_Inequality(Atlassian.Jira.IssuePriority,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority != "High"
            </remarks>
        </member>
        <member name="T:Atlassian.Jira.CustomFieldValue">
            <summary>
            A custom field associated with an issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.CustomFieldValue.Values">
            <summary>
            The values of the custom field
            </summary>
        </member>
        <member name="P:Atlassian.Jira.CustomFieldValue.Id">
            <summary>
            Id of the custom field as defined in JIRA
            </summary>
        </member>
        <member name="P:Atlassian.Jira.CustomFieldValue.Name">
            <summary>
            Name of the custom field as defined in JIRA
            </summary>
        </member>
        <member name="T:Atlassian.Jira.CustomFieldValueCollection">
            <summary>
            Collection of custom fields
            </summary>
        </member>
        <member name="T:Atlassian.Jira.IRemoteIssueFieldProvider">
            <summary>
            Represents a type that can provide RemoteFieldValues. 
            </summary>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.Add(System.String,System.String)">
            <summary>
            Add a custom field by name
            </summary>
            <param name="fieldName">The name of the custom field as defined in JIRA</param>
            <param name="fieldValue">The value of the field</param>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.AddArray(System.String,System.String[])">
            <summary>
            Add a custom field by name with an array of values
            </summary>
            <param name="fieldName">The name of the custom field as defined in JIRA</param>
            <param name="fildValues">The values of the field</param>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.AddCascadingSelectField(Atlassian.Jira.CascadingSelectCustomField)">
            <summary>
            Add a cascading select field.
            </summary>
            <param name="cascadingSelectField">Cascading select field to add.</param>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.AddCascadingSelectField(System.String,System.String,System.String)">
            <summary>
            Add a cascading select field.
            </summary>
            <param name="fieldName">The name of the custom field as defined in JIRA.</param>
            <param name="parentOption">The value of the parent option.</param>
            <param name="childOption">The value of the child option.</param>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.Add(System.String,System.String[])">
            <summary>
            Add a custom field by name
            </summary>
            <param name="fieldName">The name of the custom field as defined in JIRA</param>
            <param name="fieldValues">The values of the field</param>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.GetCascadingSelectField(System.String)">
            <summary>
            Gets a cascading select custom field by name.
            </summary>
            <param name="fieldName">Name of the custom field as defined in JIRA.</param>
            <returns>CascadingSelectCustomField instance if the field has been set on the issue, null otherwise</returns>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.ForEdit">
            <summary>
            Changes context of collection to operate against fields for edit.
            </summary>
            <returns>Current collection with changed context/</returns>
        </member>
        <member name="M:Atlassian.Jira.CustomFieldValueCollection.ForAction(System.String)">
            <summary>
            Changes context of collection to operate against fields for action.
            </summary>
            <param name="actionId">Id of action as defined in JIRA.</param>
            <returns>Current collection with changed context/</returns>
        </member>
        <member name="P:Atlassian.Jira.CustomFieldValueCollection.Item(System.String)">
            <summary>
            Gets a custom field by name
            </summary>
            <param name="fieldName">Name of the custom field as defined in JIRA</param>
            <returns>CustomField instance if the field has been set on the issue, null otherwise</returns>
        </member>
        <member name="T:Atlassian.Jira.IssueTimeTrackingData">
            <summary>
            Time tracking information for an issue.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.IssueType">
            <summary>
            The type of the issue as defined in JIRA
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueType.#ctor(Atlassian.Jira.Remote.RemoteIssueType)">
            <summary>
            Creates an instance of the IssuePriority based on a remote entity.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueType.op_Implicit(System.String)~Atlassian.Jira.IssueType">
            <summary>
            Allows assignation by name
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IssueType.op_Equality(Atlassian.Jira.IssueType,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority == "High"
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.IssueType.op_Inequality(Atlassian.Jira.IssueType,System.String)">
            <summary>
            Operator overload to simplify LINQ queries
            </summary>
            <remarks>
            Allows calls in the form of issue.Priority != "High"
            </remarks>
        </member>
        <member name="P:Atlassian.Jira.IssueType.IsSubTask">
            <summary>
            Whether this issue type represents a sub-task.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.JiraCredentials">
            <summary>
            Holds user and password information for user that connects to JIRA.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.JiraFilter">
            <summary>
            Represents a JIRA filter.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraFilter.Jql">
            <summary>
            JQL for this filter.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraFilter.Description">
            <summary>
            Description for this filter.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.JiraRestClientSettings">
            <summary>
            Settings to configure the JIRA REST client.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraRestClientSettings.#ctor">
            <summary>
            Create a new instance of the settings.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraRestClientSettings.EnableRequestTrace">
            <summary>
            Whether to trace each request.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraRestClientSettings.CustomFieldSerializers">
            <summary>
            Dictionary of serializers for custom fields.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraRestClientSettings.Cache">
            <summary>
            Cache to store frequently accessed server items.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.LiteralDateTime">
            <summary>
            Force a DateTime field to use a string provided as the JQL query value.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.LiteralMatch">
            <summary>
            Force a CustomField comparison to use the exact match JQL operator.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Project">
            <summary>
            A JIRA project
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Project.#ctor(Atlassian.Jira.Remote.RemoteProject)">
            <summary>
            Createa a new Project instance using a remote project.
            </summary>
            <param name="remoteProject">Remote project.</param>
        </member>
        <member name="T:Atlassian.Jira.ProjectComponent">
            <summary>
            A component associated with a project
            </summary>
        </member>
        <member name="T:Atlassian.Jira.ProjectComponentCollection">
            <summary>
            Collection of project components
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraNamedEntityCollection`1.Add(`0)">
            <summary>
            Associate a JiraNamedEntity to this issue
            </summary>
            <param name="element">JiraNamedEntity to add</param>
        </member>
        <member name="M:Atlassian.Jira.ProjectComponentCollection.Add(System.String)">
            <summary>
            Add a component by name
            </summary>
            <param name="componentName">Component name</param>
        </member>
        <member name="T:Atlassian.Jira.Linq.JqlContainsEqualityAttribute">
            <summary>
            Attribute that can be applied to properties to use a "Contains" rather than "Equals"
            when performing equality comparisons.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Issue">
            <summary>
            A JIRA issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.SaveChanges">
            <summary>
            Saves field changes to server
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.WorkflowTransition(System.String)">
            <summary>
            Transition an issue through a workflow action.
            </summary>
            <param name="actionName">The workflow action to transition to.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.LinkToIssue(System.String,System.String,System.String)">
            <summary>
            Creates a link between this issue and the issue specified.
            </summary>
            <param name="inwardIssueKey">Key of the issue to link.</param>
            <param name="linkName">Name of the issue link type.</param>
            <param name="comment">Comment to add to this issue.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.LinkToIssueAsync(System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a link between this issue and the issue specified.
            </summary>
            <param name="inwardIssueKey">Key of the issue to link.</param>
            <param name="linkName">Name of the issue link type.</param>
            <param name="comment">Comment to add to this issue.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetIssueLinks">
            <summary>
            Gets the issue links associated with this issue.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetIssueLinksAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the issue links associated with this issue.
            </summary>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.WorkflowTransitionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Transition an issue through a workflow action.
            </summary>
            <param name="actionName">The workflow action to transition to.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.WorkflowTransitionAsync(System.String,Atlassian.Jira.WorkflowTransitionUpdates,System.Threading.CancellationToken)">
            <summary>
            Transition an issue through a workflow action.
            </summary>
            <param name="actionName">The workflow action to transition to.</param>
            <param name="additionalUpdates">Additional updates to perform when transitioning the issue.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetSubTaks(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Returns the issues that are marked as sub tasks of this issue.
            </summary>
            <param name="maxIssues">Maximum number of issues to retrieve.</param>
            <param name="startAt">Index of the first issue to return (0-based).</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetSubTasksAsync(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Returns the issues that are marked as sub tasks of this issue.
            </summary>
            <param name="maxIssues">Maximum number of issues to retrieve.</param>
            <param name="startAt">Index of the first issue to return (0-based).</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetSubTasksAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Returns the issues that are marked as sub tasks of this issue.
            </summary>
            <param name="maxIssues">Maximum number of issues to retrieve.</param>
            <param name="startAt">Index of the first issue to return (0-based).</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetAttachments">
            <summary>
            Retrieve attachment metadata from server for this issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetAttachmentsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieve attachment metadata from server for this issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddAttachment(System.String[])">
            <summary>
            Add one or more attachments to this issue
            </summary>
            <param name="filePaths">Full paths of files to upload</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddAttachment(System.String,System.Byte[])">
            <summary>
            Add an attachment to this issue
            </summary>
            <param name="name">Attachment name with extension</param>
            <param name="data">Attachment data</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddAttachment(Atlassian.Jira.UploadAttachmentInfo[])">
            <summary>
            Add one or more attachments to this issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetComments">
            <summary>
            Retrieve comments from server for this issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetCommentsAsync(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Get the comments for this issue.
            </summary>
            <param name="maxComments">Maximum number of comments to retrieve.</param>
            <param name="startAt">Index of the first comment to return (0-based).</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetCommentsAsync(System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get the comments for this issue.
            </summary>
            <param name="maxComments">Maximum number of comments to retrieve.</param>
            <param name="startAt">Index of the first comment to return (0-based).</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddComment(System.String)">
            <summary>
            Add a comment to this issue.
            </summary>
            <param name="comment">Comment text to add.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddComment(Atlassian.Jira.Comment)">
            <summary>
            Add a comment to this issue.
            </summary>
            <param name="comment">Comment object to add.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddCommentAsync(System.String)">
            <summary>
            Add a comment to this issue.
            </summary>
            <param name="comment">Comment text to add.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddCommentAsync(Atlassian.Jira.Comment,System.Threading.CancellationToken)">
            <summary>
            Add a comment to this issue.
            </summary>
            <param name="comment">Comment object to add.</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddLabels(System.String[])">
            <summary>
            Add labels to this issue
            </summary>
            <param name="labels">Label(s) to add</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddWorklog(System.String,Atlassian.Jira.WorklogStrategy,System.String)">
            <summary>
             Adds a worklog to this issue.
            </summary>
            <param name="timespent">Specifies a time duration in JIRA duration format, representing the time spent working on the worklog</param>
            <param name="worklogStrategy">How to handle the remaining estimate, defaults to AutoAdjustRemainingEstimate</param>
            <param name="newEstimate">New estimate (only used if worklogStrategy set to NewRemainingEstimate)</param>
            <returns>Worklog as constructed by server</returns>
        </member>
        <member name="M:Atlassian.Jira.Issue.AddWorklog(Atlassian.Jira.Worklog,Atlassian.Jira.WorklogStrategy,System.String)">
            <summary>
             Adds a worklog to this issue.
            </summary>
            <param name="worklog">The worklog instance to add</param>
            <param name="worklogStrategy">How to handle the remaining estimate, defaults to AutoAdjustRemainingEstimate</param>
            <param name="newEstimate">New estimate (only used if worklogStrategy set to NewRemainingEstimate)</param>
            <returns>Worklog as constructed by server</returns>
        </member>
        <member name="M:Atlassian.Jira.Issue.DeleteWorklog(Atlassian.Jira.Worklog,Atlassian.Jira.WorklogStrategy,System.String)">
            <summary>
            Deletes the worklog with the given id and updates the remaining estimate field on the isssue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetResolutionDate">
            <summary>
            Retrieve the resolution date for this issue.
            </summary>
            <returns>Resultion date for this issue, null if it hasn't been resolved.</returns>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetWorklogs">
            <summary>
            Retrieve worklogs for current issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.Refresh">
            <summary>
            Updates all fields from server
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetAvailableActions">
            <summary>
            Gets the workflow actions that the issue can be transitioned to.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetAvailableActionsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the workflow actions that the issue can be transitioned to.
            </summary>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Issue.GetTimeTrackingData">
            <summary>
            Gets time tracking information for this issue.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Issue.Atlassian#Jira#IRemoteIssueFieldProvider#GetRemoteFields">
            <summary>
            Gets the RemoteFields representing the fields that were updated
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.ParentIssueKey">
            <summary>
            The parent key if this issue is a subtask.
            </summary>
            <remarks>
            Only available if issue was retrieved using REST API.
            </remarks>
        </member>
        <member name="P:Atlassian.Jira.Issue.Jira">
            <summary>
            The JIRA server that created this issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Summary">
            <summary>
            Brief one-line summary of the issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Description">
            <summary>
            Detailed description of the issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Environment">
            <summary>
            Hardware or software environment to which the issue relates
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Assignee">
            <summary>
            Person to whom the issue is currently assigned
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.JiraIdentifier">
            <summary>
            Gets the internal identifier assigned by JIRA.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Key">
            <summary>
            Unique identifier for this issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Priority">
            <summary>
            Importance of the issue in relation to other issues
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Project">
            <summary>
            Parent project to which the issue belongs
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Reporter">
            <summary>
            Person who entered the issue into the system
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Resolution">
            <summary>
            Record of the issue's resolution, if the issue has been resolved or closed
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Status">
            <summary>
            The stage the issue is currently at in its lifecycle.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Type">
            <summary>
            The type of the issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Votes">
            <summary>
            Number of votes the issue has
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Created">
            <summary>
            Time and date on which this issue was entered into JIRA
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.DueDate">
            <summary>
            Date by which this issue is scheduled to be completed
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Updated">
            <summary>
            Time and date on which this issue was last edited
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.ResolutionDate">
            <summary>
            Time and date on which this issue was resolved.
            </summary>
            <remarks>
            Only available if issue was retrieved using REST API, use GetResolutionDate
            method for SOAP clients.
            </remarks>
        </member>
        <member name="P:Atlassian.Jira.Issue.Components">
            <summary>
            The components associated with this issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.AffectsVersions">
            <summary>
            The versions that are affected by this issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.FixVersions">
            <summary>
            The versions in which this issue is fixed
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.CustomFields">
            <summary>
            The custom fields associated with this issue
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Issue.Item(System.String)">
            <summary>
            Gets or sets the value of a custom field
            </summary>
            <param name="customFieldName">Custom field name</param>
            <returns>Value of the custom field</returns>
        </member>
        <member name="T:Atlassian.Jira.IWebClient">
            <summary>
            Abstracts a web client.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IWebClient.AddQueryString(System.String,System.String)">
            <summary>
            Adds a query string to the request
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IWebClient.Download(System.String,System.String)">
            <summary>
            Downloads a file from the server.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.IWebClient.DownloadAsync(System.String,System.String)">
            <summary>
            Downloads a file from the server.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Jira">
            <summary>
            Represents a JIRA server
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.#ctor(System.String)">
            <summary>
            Create a SOAP client that connects with a JIRA server with anonymous access.
            </summary>
            <param name="url">Url to the JIRA server</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.#ctor(System.String,System.String,System.String)">
            <summary>
            Create a SOAP client that connects with a JIRA server with specified credentials.
            </summary>
            <param name="url">Url to the JIRA server</param>
            <param name="username">Username used to authenticate</param>
            <param name="password">Password used to authenticate</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.#ctor(System.String,System.String,System.Func{Atlassian.Jira.JiraCredentials})">
            <summary>
            Create a SOAP client that connects with a JIRA server with specified access token.
            </summary>
            <param name="url">Url to the JIRA server.</param>
            <param name="token">JIRA access token to use.</param>
            <param name="credentialsProvider">Provider of credentials needed to re-generate token.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.#ctor(System.String,System.String,Atlassian.Jira.JiraCredentials)">
            <summary>
            Create a SOAP client that connects with a JIRA server with specified access token.
            </summary>
            <param name="url">Url to the JIRA server.</param>
            <param name="token">JIRA access token to use.</param>
            <param name="credentials">Credentials used to re-generate token.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.#ctor(Atlassian.Jira.Linq.IJqlExpressionVisitor,Atlassian.Jira.Remote.IJiraSoapClient,Atlassian.Jira.IFileSystem,Atlassian.Jira.JiraCredentials,System.String,Atlassian.Jira.JiraCache)">
            <summary>
            Create a client that connects with a JIRA server with specified dependencies.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.CreateRestClient(System.String,System.String,System.String,Atlassian.Jira.JiraRestClientSettings)">
            <summary>
            Creates a JIRA client configured to use the REST API.
            </summary>
            <param name="url">Url to the JIRA server.</param>
            <param name="username">Username used to authenticate.</param>
            <param name="password">Password used to authenticate.</param>
            <param name="settings">Settings to configure the rest client.</param>
            <returns>Jira object configured to use REST API.</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.CreateRestClient(Atlassian.Jira.Remote.IJiraClient,Atlassian.Jira.JiraCredentials,Atlassian.Jira.JiraCache)">
            <summary>
            Creates a JIRA client with service dependency.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.CreateSoapClient(System.String,System.String,System.String)">
            <summary>
            Creates a JIRA client configured to use the SOAP API.
            </summary>
            <param name="url">Url to the JIRA server.</param>
            <param name="username">Username used to authenticate.</param>
            <param name="password">Password used to authenticate.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.CreateSoapClient(System.String,System.String,Atlassian.Jira.JiraCredentials)">
            <summary>
            Creates a JIRA client configured to use the SOAP API with specified access token.
            </summary>
            <param name="url">Url to the JIRA server.</param>
            <param name="token">JIRA access token to use.</param>
            <param name="credentials">Credentials used to re-generate token.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssue(System.String)">
            <summary>
            Gets an issue from the JIRA server
            </summary>
            <param name="key">The key of the issue</param>
            <returns></returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssuesFromFilter(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Returns issues that match the specified filter
            </summary>
            <param name="filterName">The name of the filter used for the search</param>
            <param name="start">The place in the result set to use as the first issue returned</param>
            <param name="maxResults">The maximum number of issues to return</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssuesFromJql(System.String)">
            <summary>
            Execute a specific JQL query and return the resulting issues
            </summary>
            <param name="jql">JQL search query</param>
            <returns>Collection of Issues that match the search query</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssuesFromJql(System.String,System.Nullable{System.Int32},System.Int32)">
            <summary>
            Execute a specific JQL query and return the resulting issues
            </summary>
            <param name="jql">JQL search query</param>
            <param name="maxIssues">Maximum number of issues to return (defaults to 50). The maximum allowable value is dictated by the JIRA property 'jira.search.views.default.max'. If you specify a value that is higher than this number, your search results will be truncated.</param>
            <param name="startAt">Index of the first issue to return (0-based)</param>
            <returns>Collection of Issues that match the search query</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssuesFromJqlAsync(System.String,System.Nullable{System.Int32},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Execute a specific JQL query and return the resulting issues.
            </summary>
            <param name="jql">JQL search query</param>
            <param name="maxIssues">Maximum number of issues to return (defaults to 50). The maximum allowable value is dictated by the JIRA property 'jira.search.views.default.max'. If you specify a value that is higher than this number, your search results will be truncated.</param>
            <param name="startAt">Index of the first issue to return (0-based)</param>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.CreateIssue(System.String,System.String)">
            <summary>
            Returns a new issue that when saved will be created on the remote JIRA server
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.DeleteIssue(Atlassian.Jira.Issue)">
            <summary>
            Deletes the issue specified from the JIRA server.
            </summary>
            <param name="issue">Issue to delete.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetSubTaskIssueTypes">
            <summary>
            Returns all the sub-tasks issue types within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueTypes(System.String)">
            <summary>
            Returns all the issue types within JIRA
            </summary>
            <param name="projectKey">If provided, returns issue types only for given project</param>
            <returns>Collection of JIRA issue types</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue types within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetProjectVersions(System.String)">
            <summary>
            Returns all versions defined on a JIRA project
            </summary>
            <param name="projectKey">The project to retrieve the versions from</param>
            <returns>Collection of JIRA versions.</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetProjectComponents(System.String)">
            <summary>
            Returns all components defined on a JIRA project
            </summary>
            <param name="projectKey">The project to retrieve the components from</param>
            <returns>Collection of JIRA components</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssuePriorities">
            <summary>
            Returns all the issue priorities within JIRA
            </summary>
            <returns>Collection of JIRA issue priorities</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssuePrioritiesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue priorities within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueLinkTypes">
            <summary>
            Returns all available issue link types.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueLinkTypesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all available issue link types.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueStatuses">
            <summary>
            Returns all the issue statuses within JIRA
            </summary>
            <returns>Collection of JIRA issue statuses</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueStatusesAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue statuses within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueResolutions">
            <summary>
            Returns all the issue resolutions within JIRA
            </summary>
            <returns>Collection of JIRA issue resolutions</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetIssueResolutionsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all the issue resolutions within JIRA
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetCustomFields">
            <summary>
            Returns all custom fields within JIRA
            </summary>
            <returns>Collection of JIRA custom fields</returns>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetCustomFieldsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all custom fields within JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetFilters">
            <summary>
            Returns the favourite filters for the user
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetProjects">
            <summary>
            Returns all projects defined in JIRA.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetProjectsAsync(System.Threading.CancellationToken)">
            <summary>
            Returns all projects defined in JIRA.
            </summary>
            <param name="token">Cancellation token for this operation.</param>
        </member>
        <member name="M:Atlassian.Jira.Jira.WithToken(System.Action{System.String})">
            <summary>
            Executes an action using the user's authentication token.
            </summary>
            <remarks>
            If action fails with 'com.atlassian.jira.rpc.exception.RemoteAuthenticationException'
            a new token will be requested from server and the action called again.
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.Jira.WithToken(System.Action{System.String,Atlassian.Jira.Remote.IJiraSoapClient})">
            <summary>
            Executes an action using the user's authentication token and the jira soap client
            </summary>
            <remarks>
            If action fails with 'com.atlassian.jira.rpc.exception.RemoteAuthenticationException'
            a new token will be requested from server and the action called again.
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.Jira.WithToken``1(System.Func{System.String,``0})">
            <summary>
            Executes a function using the user's authentication token.
            </summary>
            <remarks>
            If function fails with 'com.atlassian.jira.rpc.exception.RemoteAuthenticationException'
            a new token will be requested from server and the function called again.
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.Jira.WithToken``1(System.Func{System.String,Atlassian.Jira.Remote.IJiraSoapClient,``0})">
            <summary>
            Executes a function using the user's authentication token and the jira soap client
            </summary>
            <remarks>
            If function fails with 'com.atlassian.jira.rpc.exception.RemoteAuthenticationException'
            a new token will be requested from server and the function called again.
            </remarks>
        </member>
        <member name="M:Atlassian.Jira.Jira.GetAccessToken">
            <summary>
            Retrieves an access token from server using current credentials.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Jira.RestClient">
            <summary>
            Gets a client configured to interact with JIRA's REST API.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Jira.Debug">
            <summary>
            Whether to print the translated JQL to console
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Jira.MaxIssuesPerRequest">
            <summary>
            Maximum number of issues per request
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Jira.Url">
            <summary>
            Url to the JIRA server
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Jira.Issues">
            <summary>
            Query the issues database
            </summary>
            <returns>IQueryable of Issue</returns>
        </member>
        <member name="T:Atlassian.Jira.JiraConstant">
            <summary>
            Represents a remote constant within JIRA. Abstracts the IssueType, Priority, Resolution and Status used on issues
            </summary>
            <remarks>http://docs.atlassian.com/rpc-jira-plugin/latest/com/atlassian/jira/rpc/soap/beans/AbstractRemoteConstant.html</remarks>
        </member>
        <member name="T:Atlassian.Jira.Linq.ExpressionEvaluator">
            <summary>
            Evaluates subtrees that contain local variables.
            </summary>
            <remarks>
            Thanks to http://blogs.msdn.com/b/mattwar/archive/2007/08/01/linq-building-an-iqueryable-provider-part-iii.aspx
            for providing the source for this class
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Atlassian.Jira.Linq.ExpressionEvaluator.PartialEval(System.Linq.Expressions.Expression)" -->
        <!-- Badly formed XML comment ignored for member "M:Atlassian.Jira.Linq.ExpressionEvaluator.PartialEval(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})" -->
        <!-- Badly formed XML comment ignored for member "T:Atlassian.Jira.Linq.ExpressionEvaluator.SubtreeEvaluator" -->
        <member name="T:Atlassian.Jira.Linq.ExpressionEvaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.ExtensionMethods.ToRemote(Atlassian.Jira.Issue)">
            <summary>
            Create a new RemoteIssue based on the information in a given issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.ExtensionMethods.ToLocal(Atlassian.Jira.Remote.RemoteIssue,Atlassian.Jira.Jira)">
            <summary>
            Create a new Issue from a RemoteIssue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.ExtensionMethods.ToLocal(Atlassian.Jira.Remote.RemoteAttachment,Atlassian.Jira.Jira,Atlassian.Jira.IWebClient)">
            <summary>
            Create a new Attachment from a RemoteAttachment
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.ExtensionMethods.ToLocal(Atlassian.Jira.Remote.RemoteVersion)">
            <summary>
            Creates a new Version from RemoteVersion
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.ExtensionMethods.ToLocal(Atlassian.Jira.Remote.RemoteComponent)">
            <summary>
            Creates a new Component from RemoteComponent
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Linq.IJqlExpressionVisitor">
            <summary>
            Abstracts the translation of an Expression tree into JQL
            </summary>
        </member>
        <member name="T:Atlassian.Jira.JiraEntityDictionary`1">
            <summary>
            Dictionary of Jira entities, used to store cached values.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraEntityDictionary`1.#ctor">
            <summary>
            Create an empty dictionary.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraEntityDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a dictionary and initialize it with the given entities.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraEntityDictionary`1.#ctor(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a dictionary with an identifier and the given entities.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraEntityDictionary`1.AddIfMIssing(`0)">
            <summary>
            Adds an entity to the dictionary if it missing, otherwise no-op.
            </summary>
        </member>
        <member name="M:Atlassian.Jira.JiraEntityDictionary`1.AddIfMIssing(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a list of entities to the dictionary if their are missing.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.JiraEntityDictionary`1.Id">
            <summary>
            Unique identifier for this dictionary.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Remote.JiraRestClient">
            <summary>
            Implements the service client contract using REST calls.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteComment">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.author">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.body">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.created">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.groupLevel">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.roleLevel">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.updateAuthor">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteComment.updated">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteWorklog">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.author">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.comment">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.created">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.groupLevel">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.roleLevelId">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.startDate">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.timeSpent">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.timeSpentInSeconds">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.updateAuthor">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteWorklog.updated">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteAvatar">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAvatar.base64Data">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAvatar.contentType">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAvatar.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAvatar.owner">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAvatar.system">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAvatar.type">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteRoleActor">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActor.descriptor">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActor.parameter">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActor.projectRole">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActor.type">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActor.users">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteProjectRole">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProjectRole.description">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProjectRole.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProjectRole.name">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteUser">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteEntity">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteUser.email">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteUser.fullname">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteUser.name">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteGroup">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteGroup.name">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteGroup.users">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteRoleActors">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActors.projectRole">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActors.roleActors">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteRoleActors.users">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteProjectRoleActors">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProjectRoleActors.project">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteProject">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.AbstractNamedRemoteEntity">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.AbstractRemoteEntity">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.AbstractRemoteEntity.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.AbstractNamedRemoteEntity.name">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.description">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.issueSecurityScheme">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.key">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.lead">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.notificationScheme">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.permissionScheme">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.projectUrl">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteProject.url">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteScheme">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteScheme.description">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteScheme.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteScheme.name">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteScheme.type">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemotePermissionScheme">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemotePermissionScheme.permissionMappings">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemotePermissionMapping">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemotePermissionMapping.permission">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemotePermissionMapping.remoteEntities">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemotePermission">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemotePermission.name">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemotePermission.permission">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteAttachment">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAttachment.author">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAttachment.created">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAttachment.filename">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAttachment.filesize">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteAttachment.mimetype">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteIssue">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.affectsVersions">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.assignee">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.attachmentNames">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.components">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.created">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.customFieldValues">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.description">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.duedate">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.environment">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.fixVersions">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.key">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.priority">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.project">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.reporter">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.resolution">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.status">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.summary">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.type">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.updated">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssue.votes">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteVersion">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteVersion.archived">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteVersion.releaseDate">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteVersion.released">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteVersion.sequence">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteComponent">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteCustomFieldValue">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteCustomFieldValue.customfieldId">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteCustomFieldValue.key">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteCustomFieldValue.values">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteSecurityLevel">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteSecurityLevel.description">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteFilter">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteFilter.author">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteFilter.description">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteFilter.project">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteFilter.xml">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteField">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.AbstractRemoteConstant">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.AbstractRemoteConstant.description">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.AbstractRemoteConstant.icon">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteStatus">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteResolution">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemotePriority">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemotePriority.color">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteIssueType">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteIssueType.subTask">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteNamedObject">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteFieldValue">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteFieldValue.id">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteFieldValue.values">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteTimeInfo">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteTimeInfo.serverTime">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteTimeInfo.timeZoneId">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteServerInfo">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteServerInfo.baseUrl">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteServerInfo.buildDate">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteServerInfo.buildNumber">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteServerInfo.edition">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteServerInfo.serverTime">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteServerInfo.version">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteConfiguration">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowAttachments">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowExternalUserManagment">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowIssueLinking">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowSubTasks">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowTimeTracking">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowUnassignedIssues">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowVoting">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.allowWatching">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.timeTrackingDaysPerWeek">
            <remarks/>
        </member>
        <member name="P:Atlassian.Jira.Remote.RemoteConfiguration.timeTrackingHoursPerDay">
            <remarks/>
        </member>
        <member name="T:Atlassian.Jira.Remote.JiraSoapServiceClientFactory">
            <summary>
            Factory for JiraSoapServiceClient proxy
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.JiraSoapServiceClientFactory.Create(System.String)">
            <summary>
            Creates and configures a JiraSoapServiceClient
            </summary>
            <param name="jiraBaseUrl">Base url to JIRA server</param>
            <returns>JiraSoapServiceClient</returns>
        </member>
        <member name="T:Atlassian.Jira.Remote.JiraSoapServiceClientWrapper">
            <summary>
            Wraps the auto-generated JiraSoapServiceClient proxy
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Linq.JiraOperators">
            <summary>
            Container for the supported JIRA operator strings.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Linq.JqlFieldNameAttribute">
            <summary>
            Attribute that can be applied to properties that map to different JQL field names
            </summary>
        </member>
        <member name="T:Atlassian.Jira.ProjectVersion">
            <summary>
            A version associated with a project
            </summary>
        </member>
        <member name="P:Atlassian.Jira.ProjectVersion.IsArchived">
            <summary>
            Whether this version has been archived
            </summary>
        </member>
        <member name="P:Atlassian.Jira.ProjectVersion.IsReleased">
            <summary>
            Whether this version has been released
            </summary>
        </member>
        <member name="P:Atlassian.Jira.ProjectVersion.ReleasedDate">
            <summary>
            The released date for this version (null if not yet released)
            </summary>
        </member>
        <member name="T:Atlassian.Jira.ProjectVersionCollection">
            <summary>
            Collection of project versions
            </summary>
        </member>
        <member name="M:Atlassian.Jira.ProjectVersionCollection.Add(System.String)">
            <summary>
            Add a version by name
            </summary>
            <param name="versionName">Version name</param>
        </member>
        <member name="T:Atlassian.Jira.Remote.RestSharpJsonSerializer">
            <summary>
            Taken from https://github.com/restsharp/RestSharp/blob/86b31f9adf049d7fb821de8279154f41a17b36f7/RestSharp/Serializers/JsonSerializer.cs
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.RestSharpJsonSerializer.#ctor">
            <summary>
            Default serializer
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.RestSharpJsonSerializer.#ctor(Newtonsoft.Json.JsonSerializer)">
            <summary>
            Default serializer with overload for allowing custom Json.NET settings
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Remote.RestSharpJsonSerializer.Serialize(System.Object)">
            <summary>
            Serialize the object as JSON
            </summary>
            <param name="obj">Object to serialize</param>
            <returns>JSON as String</returns>
        </member>
        <member name="P:Atlassian.Jira.Remote.RestSharpJsonSerializer.DateFormat">
            <summary>
            Unused for JSON Serialization
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Remote.RestSharpJsonSerializer.RootElement">
            <summary>
            Unused for JSON Serialization
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Remote.RestSharpJsonSerializer.Namespace">
            <summary>
            Unused for JSON Serialization
            </summary>
        </member>
        <member name="P:Atlassian.Jira.Remote.RestSharpJsonSerializer.ContentType">
            <summary>
            Content type for serialized content
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Remote.RemoteFieldNameAttribute">
            <summary>
            Attribute that can be applied to properties to modify the name of the remotefield used when updating an issue
            </summary>
        </member>
        <member name="T:Atlassian.Jira.WorkflowTransitionUpdates">
            <summary>
            Additional data to update when executing a workflow transition.
            </summary>
        </member>
        <member name="P:Atlassian.Jira.WorkflowTransitionUpdates.Comment">
            <summary>
            Comment to add to issue when executing a workflow transition.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.WorkflowActions">
            <summary>
            Default workflow actions for a standard JIRA install.
            </summary>
        </member>
        <member name="T:Atlassian.Jira.Worklog">
            <summary>
            Represents the worklog of an issue
            </summary>
        </member>
        <member name="M:Atlassian.Jira.Worklog.#ctor(System.String,System.DateTime,System.String)">
            <summary>
            Creates a new worklog instance
            </summary>
            <param name="timeSpent">Specifies a time duration in JIRA duration format, representing the time spent working</param>
            <param name="startDate">When the work was started</param>
            <param name="comment">An optional comment to describe the work</param>
        </member>
        <member name="T:Atlassian.Jira.WorklogStrategy">
            <summary>
            The worklog time remaining strategy 
            </summary>
        </member>
    </members>
</doc>
